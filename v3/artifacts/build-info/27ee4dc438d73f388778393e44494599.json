{"id":"27ee4dc438d73f388778393e44494599","_format":"hh-sol-build-info-1","solcVersion":"0.7.6","solcLongVersion":"0.7.6+commit.7338295f","input":{"language":"Solidity","sources":{"@uniswap/v3-periphery/contracts/base/BlockTimestamp.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\n\n/// @title Function for getting block timestamp\n/// @dev Base contract that is overridden for tests\nabstract contract BlockTimestamp {\n    /// @dev Method that exists purely to be overridden for tests\n    /// @return The current block timestamp\n    function _blockTimestamp() internal view virtual returns (uint256) {\n        return block.timestamp;\n    }\n}\n"},"@uniswap/v3-periphery/contracts/base/Multicall.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport '../interfaces/IMulticall.sol';\n\n/// @title Multicall\n/// @notice Enables calling multiple methods in a single call to the contract\nabstract contract Multicall is IMulticall {\n    /// @inheritdoc IMulticall\n    function multicall(bytes[] calldata data) public payable override returns (bytes[] memory results) {\n        results = new bytes[](data.length);\n        for (uint256 i = 0; i < data.length; i++) {\n            (bool success, bytes memory result) = address(this).delegatecall(data[i]);\n\n            if (!success) {\n                // Next 5 lines from https://ethereum.stackexchange.com/a/83577\n                if (result.length < 68) revert();\n                assembly {\n                    result := add(result, 0x04)\n                }\n                revert(abi.decode(result, (string)));\n            }\n\n            results[i] = result;\n        }\n    }\n}\n"},"@uniswap/v3-periphery/contracts/base/PeripheryValidation.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\n\nimport './BlockTimestamp.sol';\n\nabstract contract PeripheryValidation is BlockTimestamp {\n    modifier checkDeadline(uint256 deadline) {\n        require(_blockTimestamp() <= deadline, 'Transaction too old');\n        _;\n    }\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Multicall interface\n/// @notice Enables calling multiple methods in a single call to the contract\ninterface IMulticall {\n    /// @notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n    /// @dev The `msg.value` should not be trusted for any method callable from multicall.\n    /// @param data The encoded function data for each of the calls to make to this contract\n    /// @return results The results from each of the calls passed in via data\n    function multicall(bytes[] calldata data) external payable returns (bytes[] memory results);\n}\n"},"contracts/swap-router-contracts/base/MulticallExtended.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport '@uniswap/v3-periphery/contracts/base/Multicall.sol';\n\nimport '../interfaces/IMulticallExtended.sol';\nimport '../base/PeripheryValidationExtended.sol';\n\n/// @title Multicall\n/// @notice Enables calling multiple methods in a single call to the contract\nabstract contract MulticallExtended is IMulticallExtended, Multicall, PeripheryValidationExtended {\n    /// @inheritdoc IMulticallExtended\n    function multicall(uint256 deadline, bytes[] calldata data)\n        external\n        payable\n        override\n        checkDeadline(deadline)\n        returns (bytes[] memory)\n    {\n        return multicall(data);\n    }\n\n    /// @inheritdoc IMulticallExtended\n    function multicall(bytes32 previousBlockhash, bytes[] calldata data)\n        external\n        payable\n        override\n        checkPreviousBlockhash(previousBlockhash)\n        returns (bytes[] memory)\n    {\n        return multicall(data);\n    }\n}\n"},"contracts/swap-router-contracts/base/PeripheryValidationExtended.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\n\nimport '@uniswap/v3-periphery/contracts/base/PeripheryValidation.sol';\n\nabstract contract PeripheryValidationExtended is PeripheryValidation {\n    modifier checkPreviousBlockhash(bytes32 previousBlockhash) {\n        require(blockhash(block.number - 1) == previousBlockhash, 'Blockhash');\n        _;\n    }\n}\n"},"contracts/swap-router-contracts/interfaces/IMulticallExtended.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol';\n\n/// @title MulticallExtended interface\n/// @notice Enables calling multiple methods in a single call to the contract with optional validation\ninterface IMulticallExtended is IMulticall {\n    /// @notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n    /// @dev The `msg.value` should not be trusted for any method callable from multicall.\n    /// @param deadline The time by which this function must be called before failing\n    /// @param data The encoded function data for each of the calls to make to this contract\n    /// @return results The results from each of the calls passed in via data\n    function multicall(uint256 deadline, bytes[] calldata data) external payable returns (bytes[] memory results);\n\n    /// @notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n    /// @dev The `msg.value` should not be trusted for any method callable from multicall.\n    /// @param previousBlockhash The expected parent blockHash\n    /// @param data The encoded function data for each of the calls to make to this contract\n    /// @return results The results from each of the calls passed in via data\n    function multicall(bytes32 previousBlockhash, bytes[] calldata data)\n        external\n        payable\n        returns (bytes[] memory results);\n}\n"}},"settings":{"metadata":{"bytecodeHash":"none"},"evmVersion":"istanbul","optimizer":{"enabled":true,"runs":1000000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@uniswap/v3-periphery/contracts/base/BlockTimestamp.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/base/BlockTimestamp.sol","exportedSymbols":{"BlockTimestamp":[13]},"id":14,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","=","0.7",".6"],"nodeType":"PragmaDirective","src":"45:23:0"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"70:100:0","text":"@title Function for getting block timestamp\n @dev Base contract that is overridden for tests"},"fullyImplemented":true,"id":13,"linearizedBaseContracts":[13],"name":"BlockTimestamp","nodeType":"ContractDefinition","nodes":[{"body":{"id":11,"nodeType":"Block","src":"386:39:0","statements":[{"expression":{"expression":{"id":8,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"403:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"403:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7,"id":10,"nodeType":"Return","src":"396:22:0"}]},"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"209:105:0","text":"@dev Method that exists purely to be overridden for tests\n @return The current block timestamp"},"id":12,"implemented":true,"kind":"function","modifiers":[],"name":"_blockTimestamp","nodeType":"FunctionDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"343:2:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":12,"src":"377:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"377:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"376:9:0"},"scope":13,"src":"319:106:0","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":14,"src":"170:257:0"}],"src":"45:383:0"},"id":0},"@uniswap/v3-periphery/contracts/base/Multicall.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/base/Multicall.sol","exportedSymbols":{"IMulticall":[133],"Multicall":[98]},"id":99,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":15,"literals":["solidity","=","0.7",".6"],"nodeType":"PragmaDirective","src":"45:23:1"},{"id":16,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"69:19:1"},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol","file":"../interfaces/IMulticall.sol","id":17,"nodeType":"ImportDirective","scope":99,"sourceUnit":134,"src":"90:38:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":19,"name":"IMulticall","nodeType":"UserDefinedTypeName","referencedDeclaration":133,"src":"260:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IMulticall_$133","typeString":"contract IMulticall"}},"id":20,"nodeType":"InheritanceSpecifier","src":"260:10:1"}],"contractDependencies":[133],"contractKind":"contract","documentation":{"id":18,"nodeType":"StructuredDocumentation","src":"130:99:1","text":"@title Multicall\n @notice Enables calling multiple methods in a single call to the contract"},"fullyImplemented":true,"id":98,"linearizedBaseContracts":[98,133],"name":"Multicall","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[132],"body":{"id":96,"nodeType":"Block","src":"407:554:1","statements":[{"expression":{"id":38,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":31,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"417:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":35,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"439:4:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"439:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":34,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"427:11:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":32,"name":"bytes","nodeType":"ElementaryTypeName","src":"431:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":33,"nodeType":"ArrayTypeName","src":"431:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"427:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"417:34:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":39,"nodeType":"ExpressionStatement","src":"417:34:1"},{"body":{"id":94,"nodeType":"Block","src":"503:452:1","statements":[{"assignments":[52,54],"declarations":[{"constant":false,"id":52,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":94,"src":"518:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":51,"name":"bool","nodeType":"ElementaryTypeName","src":"518:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":54,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":94,"src":"532:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":53,"name":"bytes","nodeType":"ElementaryTypeName","src":"532:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":64,"initialValue":{"arguments":[{"baseExpression":{"id":60,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"582:4:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":62,"indexExpression":{"id":61,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"587:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":57,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"563:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Multicall_$98","typeString":"contract Multicall"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Multicall_$98","typeString":"contract Multicall"}],"id":56,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"555:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"555:7:1","typeDescriptions":{}}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"555:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"555:26:1","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"555:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"517:73:1"},{"condition":{"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"609:8:1","subExpression":{"id":65,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"610:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":87,"nodeType":"IfStatement","src":"605:306:1","trueBody":{"id":86,"nodeType":"Block","src":"619:292:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":67,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"721:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"721:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3638","id":69,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"737:2:1","typeDescriptions":{"typeIdentifier":"t_rational_68_by_1","typeString":"int_const 68"},"value":"68"},"src":"721:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":74,"nodeType":"IfStatement","src":"717:32:1","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"741:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"741:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"ExpressionStatement","src":"741:8:1"}},{"AST":{"nodeType":"YulBlock","src":"776:67:1","statements":[{"nodeType":"YulAssignment","src":"798:27:1","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"812:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"820:4:1","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"808:3:1"},"nodeType":"YulFunctionCall","src":"808:17:1"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"798:6:1"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":54,"isOffset":false,"isSlot":false,"src":"798:6:1","valueSize":1},{"declaration":54,"isOffset":false,"isSlot":false,"src":"812:6:1","valueSize":1}],"id":75,"nodeType":"InlineAssembly","src":"767:76:1"},{"expression":{"arguments":[{"arguments":[{"id":79,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"878:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":81,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"887:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":80,"name":"string","nodeType":"ElementaryTypeName","src":"887:6:1","typeDescriptions":{}}}],"id":82,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"886:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}],"expression":{"id":77,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"867:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":78,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"867:10:1","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"867:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":76,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"860:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"860:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"860:36:1"}]}},{"expression":{"id":92,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":88,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"925:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":90,"indexExpression":{"id":89,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"933:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"925:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":91,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"938:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"925:19:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":93,"nodeType":"ExpressionStatement","src":"925:19:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":44,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"481:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":45,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"485:4:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"485:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"481:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":95,"initializationExpression":{"assignments":[41],"declarations":[{"constant":false,"id":41,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":95,"src":"466:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"466:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":43,"initialValue":{"hexValue":"30","id":42,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"478:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"466:13:1"},"loopExpression":{"expression":{"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"498:3:1","subExpression":{"id":48,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"498:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":50,"nodeType":"ExpressionStatement","src":"498:3:1"},"nodeType":"ForStatement","src":"461:494:1"}]},"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"277:26:1","text":"@inheritdoc IMulticall"},"functionSelector":"ac9650d8","id":97,"implemented":true,"kind":"function","modifiers":[],"name":"multicall","nodeType":"FunctionDefinition","overrides":{"id":26,"nodeType":"OverrideSpecifier","overrides":[],"src":"365:8:1"},"parameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":97,"src":"327:21:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":22,"name":"bytes","nodeType":"ElementaryTypeName","src":"327:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":23,"nodeType":"ArrayTypeName","src":"327:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"326:23:1"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"results","nodeType":"VariableDeclaration","scope":97,"src":"383:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":27,"name":"bytes","nodeType":"ElementaryTypeName","src":"383:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":28,"nodeType":"ArrayTypeName","src":"383:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"382:24:1"},"scope":98,"src":"308:653:1","stateMutability":"payable","virtual":false,"visibility":"public"}],"scope":99,"src":"229:734:1"}],"src":"45:919:1"},"id":1},"@uniswap/v3-periphery/contracts/base/PeripheryValidation.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/base/PeripheryValidation.sol","exportedSymbols":{"BlockTimestamp":[13],"PeripheryValidation":[118]},"id":119,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":100,"literals":["solidity","=","0.7",".6"],"nodeType":"PragmaDirective","src":"45:23:2"},{"absolutePath":"@uniswap/v3-periphery/contracts/base/BlockTimestamp.sol","file":"./BlockTimestamp.sol","id":101,"nodeType":"ImportDirective","scope":119,"sourceUnit":14,"src":"70:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":102,"name":"BlockTimestamp","nodeType":"UserDefinedTypeName","referencedDeclaration":13,"src":"143:14:2","typeDescriptions":{"typeIdentifier":"t_contract$_BlockTimestamp_$13","typeString":"contract BlockTimestamp"}},"id":103,"nodeType":"InheritanceSpecifier","src":"143:14:2"}],"contractDependencies":[13],"contractKind":"contract","fullyImplemented":true,"id":118,"linearizedBaseContracts":[118,13],"name":"PeripheryValidation","nodeType":"ContractDefinition","nodes":[{"body":{"id":116,"nodeType":"Block","src":"205:89:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":108,"name":"_blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"223:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"223:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":110,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"244:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"223:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73616374696f6e20746f6f206f6c64","id":112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"254:21:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2621685b6a86291a4533558eb72fba04db12a0363db47624d86d9bbb608d293","typeString":"literal_string \"Transaction too old\""},"value":"Transaction too old"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c2621685b6a86291a4533558eb72fba04db12a0363db47624d86d9bbb608d293","typeString":"literal_string \"Transaction too old\""}],"id":107,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"215:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"215:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":114,"nodeType":"ExpressionStatement","src":"215:61:2"},{"id":115,"nodeType":"PlaceholderStatement","src":"286:1:2"}]},"id":117,"name":"checkDeadline","nodeType":"ModifierDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":117,"src":"187:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":104,"name":"uint256","nodeType":"ElementaryTypeName","src":"187:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"186:18:2"},"src":"164:130:2","virtual":false,"visibility":"internal"}],"scope":119,"src":"102:194:2"}],"src":"45:252:2"},"id":2},"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol","exportedSymbols":{"IMulticall":[133]},"id":134,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":120,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:3"},{"id":121,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"91:109:3","text":"@title Multicall interface\n @notice Enables calling multiple methods in a single call to the contract"},"fullyImplemented":false,"id":133,"linearizedBaseContracts":[133],"name":"IMulticall","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"227:378:3","text":"@notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n @dev The `msg.value` should not be trusted for any method callable from multicall.\n @param data The encoded function data for each of the calls to make to this contract\n @return results The results from each of the calls passed in via data"},"functionSelector":"ac9650d8","id":132,"implemented":false,"kind":"function","modifiers":[],"name":"multicall","nodeType":"FunctionDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":132,"src":"629:21:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":124,"name":"bytes","nodeType":"ElementaryTypeName","src":"629:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":125,"nodeType":"ArrayTypeName","src":"629:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"628:23:3"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"results","nodeType":"VariableDeclaration","scope":132,"src":"678:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":128,"name":"bytes","nodeType":"ElementaryTypeName","src":"678:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":129,"nodeType":"ArrayTypeName","src":"678:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"677:24:3"},"scope":133,"src":"610:92:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":134,"src":"200:504:3"}],"src":"45:660:3"},"id":3},"contracts/swap-router-contracts/base/MulticallExtended.sol":{"ast":{"absolutePath":"contracts/swap-router-contracts/base/MulticallExtended.sol","exportedSymbols":{"BlockTimestamp":[13],"IMulticall":[133],"IMulticallExtended":[245],"Multicall":[98],"MulticallExtended":[189],"PeripheryValidation":[118],"PeripheryValidationExtended":[213]},"id":190,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":135,"literals":["solidity","=","0.7",".6"],"nodeType":"PragmaDirective","src":"45:23:4"},{"id":136,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"69:19:4"},{"absolutePath":"@uniswap/v3-periphery/contracts/base/Multicall.sol","file":"@uniswap/v3-periphery/contracts/base/Multicall.sol","id":137,"nodeType":"ImportDirective","scope":190,"sourceUnit":99,"src":"90:60:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/swap-router-contracts/interfaces/IMulticallExtended.sol","file":"../interfaces/IMulticallExtended.sol","id":138,"nodeType":"ImportDirective","scope":190,"sourceUnit":246,"src":"152:46:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/swap-router-contracts/base/PeripheryValidationExtended.sol","file":"../base/PeripheryValidationExtended.sol","id":139,"nodeType":"ImportDirective","scope":190,"sourceUnit":214,"src":"199:49:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":141,"name":"IMulticallExtended","nodeType":"UserDefinedTypeName","referencedDeclaration":245,"src":"388:18:4","typeDescriptions":{"typeIdentifier":"t_contract$_IMulticallExtended_$245","typeString":"contract IMulticallExtended"}},"id":142,"nodeType":"InheritanceSpecifier","src":"388:18:4"},{"baseName":{"id":143,"name":"Multicall","nodeType":"UserDefinedTypeName","referencedDeclaration":98,"src":"408:9:4","typeDescriptions":{"typeIdentifier":"t_contract$_Multicall_$98","typeString":"contract Multicall"}},"id":144,"nodeType":"InheritanceSpecifier","src":"408:9:4"},{"baseName":{"id":145,"name":"PeripheryValidationExtended","nodeType":"UserDefinedTypeName","referencedDeclaration":213,"src":"419:27:4","typeDescriptions":{"typeIdentifier":"t_contract$_PeripheryValidationExtended_$213","typeString":"contract PeripheryValidationExtended"}},"id":146,"nodeType":"InheritanceSpecifier","src":"419:27:4"}],"contractDependencies":[13,98,118,133,213,245],"contractKind":"contract","documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"250:99:4","text":"@title Multicall\n @notice Enables calling multiple methods in a single call to the contract"},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189,213,118,13,98,245,133],"name":"MulticallExtended","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[232],"body":{"id":166,"nodeType":"Block","src":"671:39:4","statements":[{"expression":{"arguments":[{"id":163,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"698:4:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"id":162,"name":"multicall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"688:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (bytes calldata[] calldata) returns (bytes memory[] memory)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"688:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":161,"id":165,"nodeType":"Return","src":"681:22:4"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"453:34:4","text":"@inheritdoc IMulticallExtended"},"functionSelector":"5ae401dc","id":167,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":156,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"624:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":157,"modifierName":{"id":155,"name":"checkDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"610:13:4","typeDescriptions":{"typeIdentifier":"t_modifier$_t_uint256_$","typeString":"modifier (uint256)"}},"nodeType":"ModifierInvocation","src":"610:23:4"}],"name":"multicall","nodeType":"FunctionDefinition","overrides":{"id":154,"nodeType":"OverrideSpecifier","overrides":[],"src":"593:8:4"},"parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":167,"src":"511:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":167,"src":"529:21:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":150,"name":"bytes","nodeType":"ElementaryTypeName","src":"529:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":151,"nodeType":"ArrayTypeName","src":"529:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"510:41:4"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":167,"src":"651:14:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":158,"name":"bytes","nodeType":"ElementaryTypeName","src":"651:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":159,"nodeType":"ArrayTypeName","src":"651:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"650:16:4"},"scope":189,"src":"492:218:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[244],"body":{"id":187,"nodeType":"Block","src":"961:39:4","statements":[{"expression":{"arguments":[{"id":184,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"988:4:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"id":183,"name":"multicall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"978:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (bytes calldata[] calldata) returns (bytes memory[] memory)"}},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":182,"id":186,"nodeType":"Return","src":"971:22:4"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"716:34:4","text":"@inheritdoc IMulticallExtended"},"functionSelector":"1f0464d1","id":188,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":177,"name":"previousBlockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"905:17:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"modifierName":{"id":176,"name":"checkPreviousBlockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"882:22:4","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"882:41:4"}],"name":"multicall","nodeType":"FunctionDefinition","overrides":{"id":175,"nodeType":"OverrideSpecifier","overrides":[],"src":"865:8:4"},"parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"previousBlockhash","nodeType":"VariableDeclaration","scope":188,"src":"774:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"774:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":188,"src":"801:21:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":171,"name":"bytes","nodeType":"ElementaryTypeName","src":"801:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":172,"nodeType":"ArrayTypeName","src":"801:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"773:50:4"},"returnParameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":188,"src":"941:14:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":179,"name":"bytes","nodeType":"ElementaryTypeName","src":"941:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":180,"nodeType":"ArrayTypeName","src":"941:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"940:16:4"},"scope":189,"src":"755:245:4","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":190,"src":"349:653:4"}],"src":"45:958:4"},"id":4},"contracts/swap-router-contracts/base/PeripheryValidationExtended.sol":{"ast":{"absolutePath":"contracts/swap-router-contracts/base/PeripheryValidationExtended.sol","exportedSymbols":{"BlockTimestamp":[13],"PeripheryValidation":[118],"PeripheryValidationExtended":[213]},"id":214,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":191,"literals":["solidity","=","0.7",".6"],"nodeType":"PragmaDirective","src":"45:23:5"},{"absolutePath":"@uniswap/v3-periphery/contracts/base/PeripheryValidation.sol","file":"@uniswap/v3-periphery/contracts/base/PeripheryValidation.sol","id":192,"nodeType":"ImportDirective","scope":214,"sourceUnit":119,"src":"70:70:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":193,"name":"PeripheryValidation","nodeType":"UserDefinedTypeName","referencedDeclaration":118,"src":"191:19:5","typeDescriptions":{"typeIdentifier":"t_contract$_PeripheryValidation_$118","typeString":"contract PeripheryValidation"}},"id":194,"nodeType":"InheritanceSpecifier","src":"191:19:5"}],"contractDependencies":[13,118],"contractKind":"contract","fullyImplemented":true,"id":213,"linearizedBaseContracts":[213,118,13],"name":"PeripheryValidationExtended","nodeType":"ContractDefinition","nodes":[{"body":{"id":211,"nodeType":"Block","src":"276:98:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":200,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"304:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"304:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"319:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"304:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":199,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"294:9:5","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"294:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":205,"name":"previousBlockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"325:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"294:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426c6f636b68617368","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"344:11:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_46d8abb9552766132026156d7c22c2b7c9e11624b63ac207deaf1a158b20a89f","typeString":"literal_string \"Blockhash\""},"value":"Blockhash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_46d8abb9552766132026156d7c22c2b7c9e11624b63ac207deaf1a158b20a89f","typeString":"literal_string \"Blockhash\""}],"id":198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"286:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"286:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":209,"nodeType":"ExpressionStatement","src":"286:70:5"},{"id":210,"nodeType":"PlaceholderStatement","src":"366:1:5"}]},"id":212,"name":"checkPreviousBlockhash","nodeType":"ModifierDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"previousBlockhash","nodeType":"VariableDeclaration","scope":212,"src":"249:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"249:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"248:27:5"},"src":"217:157:5","virtual":false,"visibility":"internal"}],"scope":214,"src":"142:234:5"}],"src":"45:332:5"},"id":5},"contracts/swap-router-contracts/interfaces/IMulticallExtended.sol":{"ast":{"absolutePath":"contracts/swap-router-contracts/interfaces/IMulticallExtended.sol","exportedSymbols":{"IMulticall":[133],"IMulticallExtended":[245]},"id":246,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":215,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:6"},{"id":216,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:6"},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol","file":"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol","id":217,"nodeType":"ImportDirective","scope":246,"sourceUnit":134,"src":"91:67:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":219,"name":"IMulticall","nodeType":"UserDefinedTypeName","referencedDeclaration":133,"src":"334:10:6","typeDescriptions":{"typeIdentifier":"t_contract$_IMulticall_$133","typeString":"contract IMulticall"}},"id":220,"nodeType":"InheritanceSpecifier","src":"334:10:6"}],"contractDependencies":[133],"contractKind":"interface","documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"160:142:6","text":"@title MulticallExtended interface\n @notice Enables calling multiple methods in a single call to the contract with optional validation"},"fullyImplemented":false,"id":245,"linearizedBaseContracts":[245,133],"name":"IMulticallExtended","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"351:464:6","text":"@notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n @dev The `msg.value` should not be trusted for any method callable from multicall.\n @param deadline The time by which this function must be called before failing\n @param data The encoded function data for each of the calls to make to this contract\n @return results The results from each of the calls passed in via data"},"functionSelector":"5ae401dc","id":232,"implemented":false,"kind":"function","modifiers":[],"name":"multicall","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":232,"src":"839:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"839:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":232,"src":"857:21:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":224,"name":"bytes","nodeType":"ElementaryTypeName","src":"857:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":225,"nodeType":"ArrayTypeName","src":"857:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"838:41:6"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"results","nodeType":"VariableDeclaration","scope":232,"src":"906:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":228,"name":"bytes","nodeType":"ElementaryTypeName","src":"906:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":229,"nodeType":"ArrayTypeName","src":"906:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"905:24:6"},"scope":245,"src":"820:110:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"936:441:6","text":"@notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n @dev The `msg.value` should not be trusted for any method callable from multicall.\n @param previousBlockhash The expected parent blockHash\n @param data The encoded function data for each of the calls to make to this contract\n @return results The results from each of the calls passed in via data"},"functionSelector":"1f0464d1","id":244,"implemented":false,"kind":"function","modifiers":[],"name":"multicall","nodeType":"FunctionDefinition","parameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"previousBlockhash","nodeType":"VariableDeclaration","scope":244,"src":"1401:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1401:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":244,"src":"1428:21:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":236,"name":"bytes","nodeType":"ElementaryTypeName","src":"1428:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":237,"nodeType":"ArrayTypeName","src":"1428:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1400:50:6"},"returnParameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"results","nodeType":"VariableDeclaration","scope":244,"src":"1501:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":240,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":241,"nodeType":"ArrayTypeName","src":"1501:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1500:24:6"},"scope":245,"src":"1382:143:6","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":246,"src":"302:1225:6"}],"src":"45:1483:6"},"id":6}},"contracts":{"@uniswap/v3-periphery/contracts/base/BlockTimestamp.sol":{"BlockTimestamp":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Base contract that is overridden for tests\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Function for getting block timestamp\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/base/BlockTimestamp.sol\":\"BlockTimestamp\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/base/BlockTimestamp.sol\":{\"keccak256\":\"0x1aa66f71234064a0c0976f62233f2edbd69554e5ad817dc97f318bc8e11f4da6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b3a40450e9d6b0f9cb91b40ffd6215612505bd74e7d954529958f4edc6ee7b93\",\"dweb:/ipfs/QmewsUCHK5N5KhNtqEwK8JgsXFADyFBrQRS5HoDWM5gi3b\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/base/Multicall.sol":{"Multicall":{"abi":[{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"multicall(bytes[])":"ac9650d8"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}}},\"title\":\"Multicall\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"}},\"notice\":\"Enables calling multiple methods in a single call to the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/base/Multicall.sol\":\"Multicall\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/base/Multicall.sol\":{\"keccak256\":\"0xfcfd78c62d2145634a791d5680a1af7055fbd301c415d29c09333c99c37d9037\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0d1c8f4a18cec8ad49e5269c5b07c7f6fd497dfc1b7b777f8ddcfb8055efd803\",\"dweb:/ipfs/QmdeCTnfHM3RGtQuo3DMX9m7gPspGGwQp7ho6m9cJjjnER\"]},\"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/base/PeripheryValidation.sol":{"PeripheryValidation":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/base/PeripheryValidation.sol\":\"PeripheryValidation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/base/BlockTimestamp.sol\":{\"keccak256\":\"0x1aa66f71234064a0c0976f62233f2edbd69554e5ad817dc97f318bc8e11f4da6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b3a40450e9d6b0f9cb91b40ffd6215612505bd74e7d954529958f4edc6ee7b93\",\"dweb:/ipfs/QmewsUCHK5N5KhNtqEwK8JgsXFADyFBrQRS5HoDWM5gi3b\"]},\"@uniswap/v3-periphery/contracts/base/PeripheryValidation.sol\":{\"keccak256\":\"0xc736bab599912d6212e8414ee4ba7af0c1e08ff6aa11caa85f5f6e07f7d421c3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://06f6c13a86900c71fa486fc029a59d1b7eb96162bb42885b5f845d995294893e\",\"dweb:/ipfs/QmUcBxMsmncw9n6eXhzzwSasGBvBGKH5FT8HSrAxrsXV4A\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol":{"IMulticall":{"abi":[{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"multicall(bytes[])":"ac9650d8"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}}},\"title\":\"Multicall interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"}},\"notice\":\"Enables calling multiple methods in a single call to the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol\":\"IMulticall\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]}},\"version\":1}"}},"contracts/swap-router-contracts/base/MulticallExtended.sol":{"MulticallExtended":{"abi":[{"inputs":[{"internalType":"bytes32","name":"previousBlockhash","type":"bytes32"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"multicall(bytes32,bytes[])":"1f0464d1","multicall(bytes[])":"ac9650d8","multicall(uint256,bytes[])":"5ae401dc"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"previousBlockhash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes32,bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\",\"previousBlockhash\":\"The expected parent blockHash\"},\"returns\":{\"_0\":\"The results from each of the calls passed in via data\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"multicall(uint256,bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\",\"deadline\":\"The time by which this function must be called before failing\"},\"returns\":{\"_0\":\"The results from each of the calls passed in via data\"}}},\"title\":\"Multicall\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes32,bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"multicall(uint256,bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"}},\"notice\":\"Enables calling multiple methods in a single call to the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swap-router-contracts/base/MulticallExtended.sol\":\"MulticallExtended\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/base/BlockTimestamp.sol\":{\"keccak256\":\"0x1aa66f71234064a0c0976f62233f2edbd69554e5ad817dc97f318bc8e11f4da6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b3a40450e9d6b0f9cb91b40ffd6215612505bd74e7d954529958f4edc6ee7b93\",\"dweb:/ipfs/QmewsUCHK5N5KhNtqEwK8JgsXFADyFBrQRS5HoDWM5gi3b\"]},\"@uniswap/v3-periphery/contracts/base/Multicall.sol\":{\"keccak256\":\"0xfcfd78c62d2145634a791d5680a1af7055fbd301c415d29c09333c99c37d9037\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0d1c8f4a18cec8ad49e5269c5b07c7f6fd497dfc1b7b777f8ddcfb8055efd803\",\"dweb:/ipfs/QmdeCTnfHM3RGtQuo3DMX9m7gPspGGwQp7ho6m9cJjjnER\"]},\"@uniswap/v3-periphery/contracts/base/PeripheryValidation.sol\":{\"keccak256\":\"0xc736bab599912d6212e8414ee4ba7af0c1e08ff6aa11caa85f5f6e07f7d421c3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://06f6c13a86900c71fa486fc029a59d1b7eb96162bb42885b5f845d995294893e\",\"dweb:/ipfs/QmUcBxMsmncw9n6eXhzzwSasGBvBGKH5FT8HSrAxrsXV4A\"]},\"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]},\"contracts/swap-router-contracts/base/MulticallExtended.sol\":{\"keccak256\":\"0x204e06ccc534fbe6a287d09e00241b825a895ba14a3894b66fba6c45154cbc6e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6a43dc4784e762ee47df4f6af4fe5c056559b3e27eee89337ff7e512660e40a0\",\"dweb:/ipfs/QmZcLvXZ5pn2w73kYRd1X9tU4qoBkkHEtd5B3WWTgMjoHR\"]},\"contracts/swap-router-contracts/base/PeripheryValidationExtended.sol\":{\"keccak256\":\"0x241a9cf357b45b9e21673f7f1742cfed6ed0289e9e72b295805be4cf76bbdde3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e058457f0089a9b33d093744594a69c6559355877c07ed8e9283056e0d3cd4ab\",\"dweb:/ipfs/QmVnZFC3Qw2TVy5RnmtST1vH66FrA1Q8mCmgraQDFYTfdV\"]},\"contracts/swap-router-contracts/interfaces/IMulticallExtended.sol\":{\"keccak256\":\"0xf92e9474990ec0025f6e4b8faf040a5c6280549c16bb42b6c00be9975757d997\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://968de2851b6a2a502e1b19c625beff9c727c855e871925cf9b4c073395b8646e\",\"dweb:/ipfs/QmTsSX6MrbhEx7dcozPk1NaNHWQkPzEDQRRwTR7MfLMBbu\"]}},\"version\":1}"}},"contracts/swap-router-contracts/base/PeripheryValidationExtended.sol":{"PeripheryValidationExtended":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swap-router-contracts/base/PeripheryValidationExtended.sol\":\"PeripheryValidationExtended\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/base/BlockTimestamp.sol\":{\"keccak256\":\"0x1aa66f71234064a0c0976f62233f2edbd69554e5ad817dc97f318bc8e11f4da6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b3a40450e9d6b0f9cb91b40ffd6215612505bd74e7d954529958f4edc6ee7b93\",\"dweb:/ipfs/QmewsUCHK5N5KhNtqEwK8JgsXFADyFBrQRS5HoDWM5gi3b\"]},\"@uniswap/v3-periphery/contracts/base/PeripheryValidation.sol\":{\"keccak256\":\"0xc736bab599912d6212e8414ee4ba7af0c1e08ff6aa11caa85f5f6e07f7d421c3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://06f6c13a86900c71fa486fc029a59d1b7eb96162bb42885b5f845d995294893e\",\"dweb:/ipfs/QmUcBxMsmncw9n6eXhzzwSasGBvBGKH5FT8HSrAxrsXV4A\"]},\"contracts/swap-router-contracts/base/PeripheryValidationExtended.sol\":{\"keccak256\":\"0x241a9cf357b45b9e21673f7f1742cfed6ed0289e9e72b295805be4cf76bbdde3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e058457f0089a9b33d093744594a69c6559355877c07ed8e9283056e0d3cd4ab\",\"dweb:/ipfs/QmVnZFC3Qw2TVy5RnmtST1vH66FrA1Q8mCmgraQDFYTfdV\"]}},\"version\":1}"}},"contracts/swap-router-contracts/interfaces/IMulticallExtended.sol":{"IMulticallExtended":{"abi":[{"inputs":[{"internalType":"bytes32","name":"previousBlockhash","type":"bytes32"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"multicall(bytes32,bytes[])":"1f0464d1","multicall(bytes[])":"ac9650d8","multicall(uint256,bytes[])":"5ae401dc"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"previousBlockhash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes32,bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\",\"previousBlockhash\":\"The expected parent blockHash\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"multicall(uint256,bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\",\"deadline\":\"The time by which this function must be called before failing\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}}},\"title\":\"MulticallExtended interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes32,bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"multicall(uint256,bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"}},\"notice\":\"Enables calling multiple methods in a single call to the contract with optional validation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swap-router-contracts/interfaces/IMulticallExtended.sol\":\"IMulticallExtended\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]},\"contracts/swap-router-contracts/interfaces/IMulticallExtended.sol\":{\"keccak256\":\"0xf92e9474990ec0025f6e4b8faf040a5c6280549c16bb42b6c00be9975757d997\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://968de2851b6a2a502e1b19c625beff9c727c855e871925cf9b4c073395b8646e\",\"dweb:/ipfs/QmTsSX6MrbhEx7dcozPk1NaNHWQkPzEDQRRwTR7MfLMBbu\"]}},\"version\":1}"}}}}}